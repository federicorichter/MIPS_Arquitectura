stateDiagram-v2
    [*] --> IDLE
    
    state "IDLE" as IDLE
    
    %% Transiciones desde IDLE según comando recibido (uart_rx_data_reg)
    IDLE --> WAIT_RX_DONE_DOWN_SEND_REGISTERS: rx=0x01
    IDLE --> WAIT_RX_DONE_DOWN_SEND_IF_ID: rx=0x02
    IDLE --> WAIT_RX_DONE_DOWN_SEND_ID_EX: rx=0x03
    IDLE --> WAIT_RX_DONE_DOWN_SEND_EX_MEM: rx=0x04
    IDLE --> WAIT_RX_DONE_DOWN_SEND_MEM_WB: rx=0x05
    IDLE --> WAIT_RX_DONE_DOWN_SEND_MEMORY: rx=0x06
    IDLE --> WAIT_RX_DONE_DOWN_RECEIVE_INSTRUCTION_COUNT: rx=0x07
    IDLE --> WAIT_RX_DONE_DOWN_IDLE: rx=0x08,0x09,0x0D
    IDLE --> STEP_CLOCK: rx=0x0A
    IDLE --> WAIT_RX_DONE_DOWN_RECEIVE_ADDRESS: rx=0x0B
    IDLE --> WAIT_RX_DOWN_STOP_PC: rx=0x0E
    IDLE --> SEND_DEBUG_INSTRUCTIONS: rx=0x10
    IDLE --> SEND_PC: rx=0x11

    %% Envío de registros
    state "WAIT_RX_DONE_DOWN_SEND_REGISTERS" as WAIT_RX_DONE_DOWN_SEND_REGISTERS
    WAIT_RX_DONE_DOWN_SEND_REGISTERS --> SEND_REGISTERS: !uart_rx_done_reg
    state "SEND_REGISTERS" as SEND_REGISTERS
    SEND_REGISTERS --> WAIT_UART_TX_FULL_DOWN_SEND_REGISTERS: uart_tx_start=1
    state "WAIT_UART_TX_FULL_DOWN_SEND_REGISTERS" as WAIT_UART_TX_FULL_DOWN_SEND_REGISTERS
    WAIT_UART_TX_FULL_DOWN_SEND_REGISTERS --> SEND_REGISTERS: uart_tx_full=1
    SEND_REGISTERS --> WAIT_UART_TX_FULL_DOWN_IDLE_ACK: fin_envio

    %% Enviar IF/ID
    state "WAIT_RX_DONE_DOWN_SEND_IF_ID" as WAIT_RX_DONE_DOWN_SEND_IF_ID
    WAIT_RX_DONE_DOWN_SEND_IF_ID --> SEND_IF_ID: !uart_rx_done_reg
    state "SEND_IF_ID" as SEND_IF_ID
    SEND_IF_ID --> WAIT_UART_TX_FULL_DOWN_SEND_IF_ID: uart_tx_start=1
    state "WAIT_UART_TX_FULL_DOWN_SEND_IF_ID" as WAIT_UART_TX_FULL_DOWN_SEND_IF_ID
    WAIT_UART_TX_FULL_DOWN_SEND_IF_ID --> SEND_IF_ID: uart_tx_full=1
    SEND_IF_ID --> WAIT_UART_TX_FULL_DOWN_IDLE_ACK: fin_envio

    %% Enviar ID/EX
    state "WAIT_RX_DONE_DOWN_SEND_ID_EX" as WAIT_RX_DONE_DOWN_SEND_ID_EX
    WAIT_RX_DONE_DOWN_SEND_ID_EX --> SEND_ID_EX: !uart_rx_done_reg
    state "SEND_ID_EX" as SEND_ID_EX
    SEND_ID_EX --> WAIT_UART_TX_FULL_DOWN_SEND_ID_EX: uart_tx_start=1
    state "WAIT_UART_TX_FULL_DOWN_SEND_ID_EX" as WAIT_UART_TX_FULL_DOWN_SEND_ID_EX
    WAIT_UART_TX_FULL_DOWN_SEND_ID_EX --> SEND_ID_EX: uart_tx_full=1
    SEND_ID_EX --> WAIT_UART_TX_FULL_DOWN_IDLE_ACK: fin_envio

    %% Enviar EX/MEM
    state "WAIT_RX_DONE_DOWN_SEND_EX_MEM" as WAIT_RX_DONE_DOWN_SEND_EX_MEM
    WAIT_RX_DONE_DOWN_SEND_EX_MEM --> SEND_EX_MEM: !uart_rx_done_reg
    state "SEND_EX_MEM" as SEND_EX_MEM
    SEND_EX_MEM --> WAIT_UART_TX_FULL_DOWN_SEND_EX_MEM: uart_tx_start=1
    state "WAIT_UART_TX_FULL_DOWN_SEND_EX_MEM" as WAIT_UART_TX_FULL_DOWN_SEND_EX_MEM
    WAIT_UART_TX_FULL_DOWN_SEND_EX_MEM --> SEND_EX_MEM: uart_tx_full=1
    SEND_EX_MEM --> WAIT_UART_TX_FULL_DOWN_IDLE_ACK: fin_envio

    %% Enviar MEM/WB
    state "WAIT_RX_DONE_DOWN_SEND_MEM_WB" as WAIT_RX_DONE_DOWN_SEND_MEM_WB
    WAIT_RX_DONE_DOWN_SEND_MEM_WB --> SEND_MEM_WB: !uart_rx_done_reg
    state "SEND_MEM_WB" as SEND_MEM_WB
    SEND_MEM_WB --> WAIT_UART_TX_FULL_DOWN_SEND_MEM_WB: uart_tx_start=1
    state "WAIT_UART_TX_FULL_DOWN_SEND_MEM_WB" as WAIT_UART_TX_FULL_DOWN_SEND_MEM_WB
    WAIT_UART_TX_FULL_DOWN_SEND_MEM_WB --> SEND_MEM_WB: uart_tx_full=1
    SEND_MEM_WB --> WAIT_UART_TX_FULL_DOWN_IDLE_ACK: fin_envio

    %% Enviar memoria de datos
    state "WAIT_RX_DONE_DOWN_SEND_MEMORY" as WAIT_RX_DONE_DOWN_SEND_MEMORY
    WAIT_RX_DONE_DOWN_SEND_MEMORY --> SEND_MEMORY: !uart_rx_done_reg
    state "SEND_MEMORY" as SEND_MEMORY
    SEND_MEMORY --> WAIT_UART_TX_FULL_DOWN_SEND_MEMORY: uart_tx_start=1
    state "WAIT_UART_TX_FULL_DOWN_SEND_MEMORY" as WAIT_UART_TX_FULL_DOWN_SEND_MEMORY
    WAIT_UART_TX_FULL_DOWN_SEND_MEMORY --> SEND_MEMORY: uart_tx_full=1
    SEND_MEMORY --> WAIT_UART_TX_FULL_DOWN_IDLE_ACK: fin_envio

    %% Carga de programa
    state "WAIT_RX_DONE_DOWN_RECEIVE_INSTRUCTION_COUNT" as WAIT_RX_DONE_DOWN_RECEIVE_INSTRUCTION_COUNT
    WAIT_RX_DONE_DOWN_RECEIVE_INSTRUCTION_COUNT --> RECEIVE_INSTRUCTION_COUNT: !uart_rx_done_reg
    state "RECEIVE_INSTRUCTION_COUNT" as RECEIVE_INSTRUCTION_COUNT
    RECEIVE_INSTRUCTION_COUNT --> WAIT_RX_DONE_DOWN_LOAD_PROGRAM: uart_rx_done_reg

    state "WAIT_RX_DONE_DOWN_LOAD_PROGRAM" as WAIT_RX_DONE_DOWN_LOAD_PROGRAM
    WAIT_RX_DONE_DOWN_LOAD_PROGRAM --> LOAD_PROGRAM: !uart_rx_done_reg
    state "LOAD_PROGRAM" as LOAD_PROGRAM
    LOAD_PROGRAM --> WAIT_RX_DONE_LOAD_PROGRAM_1: (byte=1 & uart_rx_done_reg)
    LOAD_PROGRAM --> WAIT_RX_DONE_LOAD_PROGRAM_2: (byte=2 & uart_rx_done_reg)
    LOAD_PROGRAM --> WAIT_RX_DONE_LOAD_PROGRAM_3: (byte=3 & uart_rx_done_reg)
    LOAD_PROGRAM --> WAIT_EXECUTE: (byte=4 & ultima_instruccion)

    state "WAIT_RX_DONE_LOAD_PROGRAM_1" as WAIT_RX_DONE_LOAD_PROGRAM_1
    WAIT_RX_DONE_LOAD_PROGRAM_1 --> LOAD_PROGRAM: !uart_rx_done_reg
    state "WAIT_RX_DONE_LOAD_PROGRAM_2" as WAIT_RX_DONE_LOAD_PROGRAM_2
    WAIT_RX_DONE_LOAD_PROGRAM_2 --> LOAD_PROGRAM: !uart_rx_done_reg
    state "WAIT_RX_DONE_LOAD_PROGRAM_3" as WAIT_RX_DONE_LOAD_PROGRAM_3
    WAIT_RX_DONE_LOAD_PROGRAM_3 --> LOAD_PROGRAM: !uart_rx_done_reg

    state "WAIT_EXECUTE" as WAIT_EXECUTE
    WAIT_EXECUTE --> PROGRAM_RESET: listo_para_reset

    %% Reset del programa
    state "PROGRAM_RESET" as PROGRAM_RESET
    PROGRAM_RESET --> WAIT_UART_TX_FULL_DOWN_IDLE_ACK: reset_terminado
    PROGRAM_RESET --> PROGRAM_RESET: incrementar_reset_counter
    
    %% Lectura de dirección de memoria
    state "WAIT_RX_DONE_DOWN_RECEIVE_ADDRESS" as WAIT_RX_DONE_DOWN_RECEIVE_ADDRESS
    WAIT_RX_DONE_DOWN_RECEIVE_ADDRESS --> RECEIVE_ADDRESS: !uart_rx_done_reg
    state "RECEIVE_ADDRESS" as RECEIVE_ADDRESS
    RECEIVE_ADDRESS --> WAIT_RX_DONE_DOWN_SEND_MEMORY: uart_rx_done_reg

    %% Recepción de PC de parada
    state "WAIT_RX_DOWN_STOP_PC" as WAIT_RX_DOWN_STOP_PC
    WAIT_RX_DOWN_STOP_PC --> RECEIVE_STOP_PC: !uart_rx_done_reg
    state "RECEIVE_STOP_PC" as RECEIVE_STOP_PC
    RECEIVE_STOP_PC --> WAIT_NO_TX_FULL: uart_rx_done_reg

    %% Espera (IDLE ACK)
    state "WAIT_UART_TX_FULL_DOWN_IDLE_ACK" as WAIT_UART_TX_FULL_DOWN_IDLE_ACK
    WAIT_UART_TX_FULL_DOWN_IDLE_ACK --> WAIT_TX_DOWN_IDLE_ACK: uart_tx_full=1
    state "WAIT_TX_DOWN_IDLE_ACK" as WAIT_TX_DOWN_IDLE_ACK
    WAIT_TX_DOWN_IDLE_ACK --> IDLE: !uart_tx_full
    
    %% Esperar sin transmisión
    state "WAIT_NO_TX_FULL" as WAIT_NO_TX_FULL
    WAIT_NO_TX_FULL --> SEND_IDLE_ACK: !uart_tx_full
    state "SEND_IDLE_ACK" as SEND_IDLE_ACK
    SEND_IDLE_ACK --> WAIT_UART_TX_FULL_DOWN_IDLE_ACK: uart_tx_start=1

    %% Espera sin recepción
    state "WAIT_RX_DONE_DOWN_IDLE" as WAIT_RX_DONE_DOWN_IDLE
    WAIT_RX_DONE_DOWN_IDLE --> IDLE: !uart_rx_done_reg

    %% Enviar instrucciones de depuración
    state "SEND_DEBUG_INSTRUCTIONS" as SEND_DEBUG_INSTRUCTIONS
    SEND_DEBUG_INSTRUCTIONS --> WAIT_UART_TX_FULL_DOWN_SEND_DEBUG_INSTRUCTIONS: uart_tx_start=1
    state "WAIT_UART_TX_FULL_DOWN_SEND_DEBUG_INSTRUCTIONS" as WAIT_UART_TX_FULL_DOWN_SEND_DEBUG_INSTRUCTIONS
    WAIT_UART_TX_FULL_DOWN_SEND_DEBUG_INSTRUCTIONS --> SEND_DEBUG_INSTRUCTIONS: uart_tx_full=1
    SEND_DEBUG_INSTRUCTIONS --> WAIT_UART_TX_FULL_DOWN_IDLE_ACK: fin_envio

    %% Enviar PC
    state "SEND_PC" as SEND_PC
    SEND_PC --> WAIT_UART_TX_FULL_DOWN_SEND_PC: uart_tx_start=1
    state "WAIT_UART_TX_FULL_DOWN_SEND_PC" as WAIT_UART_TX_FULL_DOWN_SEND_PC
    WAIT_UART_TX_FULL_DOWN_SEND_PC --> SEND_PC: uart_tx_full=1
    SEND_PC --> WAIT_UART_TX_FULL_DOWN_IDLE_ACK: fin_envio

    %% Modo paso a paso
    state "STEP_CLOCK" as STEP_CLOCK
    STEP_CLOCK --> WAIT_STEP
    state "WAIT_STEP" as WAIT_STEP
    WAIT_STEP --> IDLE

    %% Estados finales por defecto
    [*] --> IDLE